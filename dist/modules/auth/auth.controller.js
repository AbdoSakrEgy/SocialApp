"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_service_1 = require("./auth.service");
const validation_middleware_1 = require("../../middlewares/validation.middleware");
const auth_validation_1 = require("./auth.validation");
const auth_middleware_1 = require("../../middlewares/auth.middleware");
const router = (0, express_1.Router)();
const authServices = new auth_service_1.AuthServices();
router.post("/register", (0, validation_middleware_1.validation)(auth_validation_1.registerSchema), authServices.register);
router.post("/login", (0, validation_middleware_1.validation)(auth_validation_1.loginSchema), authServices.login);
router.post("/refresh-token", authServices.refreshToken);
router.post("/confirm-email", (0, validation_middleware_1.validation)(auth_validation_1.confirmEmailSchema), authServices.confirmEmail);
router.patch("/update-email", auth_middleware_1.auth, (0, validation_middleware_1.validation)(auth_validation_1.updateEmailSchema), authServices.updateEmail);
router.post("/resend-email-otp", (0, validation_middleware_1.validation)(auth_validation_1.resendEmailOtpSchema), authServices.resendEmailOtp);
router.patch("/update-password", auth_middleware_1.auth, (0, validation_middleware_1.validation)(auth_validation_1.updatePasswordSchema), authServices.updatePassword);
router.post("/forget-password", (0, validation_middleware_1.validation)(auth_validation_1.forgetPasswordSchema), authServices.forgetPassword);
router.patch("/change-password", (0, validation_middleware_1.validation)(auth_validation_1.changePasswordSchema), authServices.changePassword);
router.post("/logout", auth_middleware_1.auth, authServices.logout);
exports.default = router;
